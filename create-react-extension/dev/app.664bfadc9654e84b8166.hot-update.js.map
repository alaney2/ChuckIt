{"version":3,"file":"app.664bfadc9654e84b8166.hot-update.js","sources":["/Users/alaney/Desktop/Projects/chuckit/create-react-extension/packages/cra-template/template/src/App.js"],"sourcesContent":["/*global chrome*/\n\n\nimport './App.css';\nimport like from './images/like.jpeg';\nimport meh from './images/meh.png';\nimport dislike from './images/dislike.png';\nimport { useState } from 'react';\n// import { useEffect } from 'react';\nlet mysql = require('mysql2');\nlet config = require('./config.js');\n\n\nfunction App() {\n  const [website, setWebsite] = useState('');\n  let connection = mysql.createConnection(config);\n  connection.connect(function(err){\n    if(err) return console.error('error: ' + err.message);\n    console.log('Connected to the MySQL server.');\n  });\n    // return () => {\n    //   connection.end();\n    // }\n\n  chrome.tabs.query({active: true, lastFocusedWindow: true}, tabs => {\n    let url = tabs[0].url;\n    let domain = \"\";\n    let encounteredPeriod = false;\n    for (let char of url) {\n      if (char === '.') encounteredPeriod = true;\n      if (char === '/' && encounteredPeriod) break;\n      domain += char;\n    }\n    if (domain === 'https://www.youtube.com') {\n      setWebsite(url);\n    } else {\n      setWebsite(domain);\n    }\n  });\n\n  function handleLike(e) {\n    e.preventDefault();\n    let insertwebsite = `INSERT INTO websites(url) VALUES('www.youtube.com');`;\n    connection.query(insertwebsite);\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <p id=\"website\">Site: {website}</p>\n      </div>\n      <div className=\"buttons\">\n        <input type=\"image\" src={like} id=\"like\" alt=\"like\" onClick={handleLike} />\n        <input type=\"image\" src={meh} id=\"meh\" alt=\"neutral\" />\n        <input type=\"image\" src={dislike} id=\"dislike\" alt=\"dislike\" />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}